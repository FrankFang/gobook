// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: query.sql

package db

import (
	"context"
)

const createBook = `-- name: CreateBook :one
INSERT INTO books (
  name
) VALUES (
  ?
)
RETURNING id, name, author, created_at, updated_at
`

func (q *Queries) CreateBook(ctx context.Context, name string) (Book, error) {
	row := q.db.QueryRowContext(ctx, createBook, name)
	var i Book
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Author,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getFirstBook = `-- name: GetFirstBook :one
SELECT id, name, author, created_at, updated_at FROM books LIMIT 1
`

func (q *Queries) GetFirstBook(ctx context.Context) (Book, error) {
	row := q.db.QueryRowContext(ctx, getFirstBook)
	var i Book
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Author,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
